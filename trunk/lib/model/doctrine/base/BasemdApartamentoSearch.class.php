<?php

/**
 * BasemdApartamentoSearch
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $md_locacion_id
 * @property float $precio_alta
 * @property float $precio_media
 * @property float $precio_baja
 * @property float $precio_febrero
 * @property float $precio_revellion
 * @property integer $cantidad_personas
 * @property enum $tipo_propiedad
 * @property integer $metraje
 * @property integer $cuartos
 * @property integer $minimo_dias
 * @property mdApartamento $mdApartamento
 * 
 * @method integer             getId()                Returns the current record's "id" value
 * @method integer             getMdLocacionId()      Returns the current record's "md_locacion_id" value
 * @method float               getPrecioAlta()        Returns the current record's "precio_alta" value
 * @method float               getPrecioMedia()       Returns the current record's "precio_media" value
 * @method float               getPrecioBaja()        Returns the current record's "precio_baja" value
 * @method float               getPrecioFebrero()     Returns the current record's "precio_febrero" value
 * @method float               getPrecioRevellion()   Returns the current record's "precio_revellion" value
 * @method integer             getCantidadPersonas()  Returns the current record's "cantidad_personas" value
 * @method enum                getTipoPropiedad()     Returns the current record's "tipo_propiedad" value
 * @method integer             getMetraje()           Returns the current record's "metraje" value
 * @method integer             getCuartos()           Returns the current record's "cuartos" value
 * @method integer             getMinimoDias()        Returns the current record's "minimo_dias" value
 * @method mdApartamento       getMdApartamento()     Returns the current record's "mdApartamento" value
 * @method mdApartamentoSearch setId()                Sets the current record's "id" value
 * @method mdApartamentoSearch setMdLocacionId()      Sets the current record's "md_locacion_id" value
 * @method mdApartamentoSearch setPrecioAlta()        Sets the current record's "precio_alta" value
 * @method mdApartamentoSearch setPrecioMedia()       Sets the current record's "precio_media" value
 * @method mdApartamentoSearch setPrecioBaja()        Sets the current record's "precio_baja" value
 * @method mdApartamentoSearch setPrecioFebrero()     Sets the current record's "precio_febrero" value
 * @method mdApartamentoSearch setPrecioRevellion()   Sets the current record's "precio_revellion" value
 * @method mdApartamentoSearch setCantidadPersonas()  Sets the current record's "cantidad_personas" value
 * @method mdApartamentoSearch setTipoPropiedad()     Sets the current record's "tipo_propiedad" value
 * @method mdApartamentoSearch setMetraje()           Sets the current record's "metraje" value
 * @method mdApartamentoSearch setCuartos()           Sets the current record's "cuartos" value
 * @method mdApartamentoSearch setMinimoDias()        Sets the current record's "minimo_dias" value
 * @method mdApartamentoSearch setMdApartamento()     Sets the current record's "mdApartamento" value
 * 
 * @package    rentNchill
 * @subpackage model
 * @author     Rodrigo Santellan
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasemdApartamentoSearch extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('md_apartamento_search');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'length' => 4,
             ));
        $this->hasColumn('md_locacion_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('precio_alta', 'float', null, array(
             'type' => 'float',
             'notnull' => true,
             ));
        $this->hasColumn('precio_media', 'float', null, array(
             'type' => 'float',
             'notnull' => true,
             ));
        $this->hasColumn('precio_baja', 'float', null, array(
             'type' => 'float',
             'notnull' => true,
             ));
        $this->hasColumn('precio_febrero', 'float', null, array(
             'type' => 'float',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('precio_revellion', 'float', null, array(
             'type' => 'float',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('cantidad_personas', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('tipo_propiedad', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'apartment',
              1 => 'house',
              2 => 'bedNbreakfast',
              3 => 'cabin',
              4 => 'villa',
              5 => 'castle',
              6 => 'dorm',
              7 => 'treehouse',
              8 => 'boat',
              9 => 'automobile',
              10 => 'igloo',
             ),
             'notnull' => false,
             ));
        $this->hasColumn('metraje', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => 4,
             ));
        $this->hasColumn('cuartos', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => 4,
             ));
        $this->hasColumn('minimo_dias', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => false,
             'default' => 1,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('mdApartamento', array(
             'local' => 'id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}