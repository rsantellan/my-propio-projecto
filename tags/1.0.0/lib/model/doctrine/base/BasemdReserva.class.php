<?php

/**
 * BasemdReserva
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $md_user_id
 * @property integer $md_apartamento_id
 * @property date $fecha_desde
 * @property date $fecha_hasta
 * @property integer $cantidad_personas
 * @property integer $md_currency_id
 * @property double $total
 * @property enum $status
 * @property string $message
 * @property mdUser $mdUser
 * @property mdApartamento $mdApartamento
 * @property mdCurrency $mdCurrency
 * 
 * @method integer       getId()                Returns the current record's "id" value
 * @method integer       getMdUserId()          Returns the current record's "md_user_id" value
 * @method integer       getMdApartamentoId()   Returns the current record's "md_apartamento_id" value
 * @method date          getFechaDesde()        Returns the current record's "fecha_desde" value
 * @method date          getFechaHasta()        Returns the current record's "fecha_hasta" value
 * @method integer       getCantidadPersonas()  Returns the current record's "cantidad_personas" value
 * @method integer       getMdCurrencyId()      Returns the current record's "md_currency_id" value
 * @method double        getTotal()             Returns the current record's "total" value
 * @method enum          getStatus()            Returns the current record's "status" value
 * @method string        getMessage()           Returns the current record's "message" value
 * @method mdUser        getMdUser()            Returns the current record's "mdUser" value
 * @method mdApartamento getMdApartamento()     Returns the current record's "mdApartamento" value
 * @method mdCurrency    getMdCurrency()        Returns the current record's "mdCurrency" value
 * @method mdReserva     setId()                Sets the current record's "id" value
 * @method mdReserva     setMdUserId()          Sets the current record's "md_user_id" value
 * @method mdReserva     setMdApartamentoId()   Sets the current record's "md_apartamento_id" value
 * @method mdReserva     setFechaDesde()        Sets the current record's "fecha_desde" value
 * @method mdReserva     setFechaHasta()        Sets the current record's "fecha_hasta" value
 * @method mdReserva     setCantidadPersonas()  Sets the current record's "cantidad_personas" value
 * @method mdReserva     setMdCurrencyId()      Sets the current record's "md_currency_id" value
 * @method mdReserva     setTotal()             Sets the current record's "total" value
 * @method mdReserva     setStatus()            Sets the current record's "status" value
 * @method mdReserva     setMessage()           Sets the current record's "message" value
 * @method mdReserva     setMdUser()            Sets the current record's "mdUser" value
 * @method mdReserva     setMdApartamento()     Sets the current record's "mdApartamento" value
 * @method mdReserva     setMdCurrency()        Sets the current record's "mdCurrency" value
 * 
 * @package    rentNchill
 * @subpackage model
 * @author     Rodrigo Santellan
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasemdReserva extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('md_reserva');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('md_user_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('md_apartamento_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('fecha_desde', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('fecha_hasta', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('cantidad_personas', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('md_currency_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('total', 'double', null, array(
             'type' => 'double',
             'notnull' => true,
             ));
        $this->hasColumn('status', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'pending',
              1 => 'confirm',
              2 => 'efective',
              3 => 'cancel',
              4 => 'cancelPayPal',
              5 => 'errorPayPal',
              6 => 'prePayPal',
             ),
             'default' => 'pending',
             'notnull' => true,
             ));
        $this->hasColumn('message', 'string', 1000, array(
             'type' => 'string',
             'length' => 1000,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('mdUser', array(
             'local' => 'md_user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('mdApartamento', array(
             'local' => 'md_apartamento_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('mdCurrency', array(
             'local' => 'md_currency_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}